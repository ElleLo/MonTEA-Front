// Generated by BUCKLESCRIPT VERSION 5.0.0, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Utils = require("./Utils.bs.js");
var React = require("react");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var UserData = require("./UserData.bs.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

((require('./app.css')));

var tableKey = /* record */[/* contents */0];

var component = ReasonReact.reducerComponent("Profile");

function reducer(action, state) {
  if (typeof action === "number") {
    return /* Update */Block.__(0, [/* record */[
                /* data */state[/* data */0],
                /* subTags */state[/* subTags */1],
                /* subClubs */state[/* subClubs */2],
                /* unsubTags */state[/* unsubTags */3],
                /* unsubClubs */state[/* unsubClubs */4],
                /* sub_loading */!state[/* sub_loading */5]
              ]]);
  } else if (action.tag) {
    var payload = action[0][1];
    return /* Update */Block.__(0, [/* record */[
                /* data */payload,
                /* subTags */payload[/* subTags */0],
                /* subClubs */payload[/* subClubs */1],
                /* unsubTags */payload[/* unsubTags */2],
                /* unsubClubs */payload[/* unsubClubs */3],
                /* sub_loading */false
              ]]);
  } else {
    var params = action[1];
    var method_ = action[0];
    return /* SideEffects */Block.__(1, [(function (self) {
                  return UserData.fetchData(method_, params, UserData.Decode[/* getProfileData */0], state, (function (payload) {
                                return Curry._1(self[/* send */3], /* Fetched */Block.__(1, [payload]));
                              }));
                })]);
  }
}

function make(userId, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              return Curry._1(self[/* send */3], /* Fetch */Block.__(0, [
                            "get_profile_data",
                            /* array */[userId]
                          ]));
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1][/* sub_loading */5];
              var tmp;
              if (match) {
                tmp = React.createElement("div", {
                      className: "w-full"
                    }, React.createElement("img", {
                          className: "items-center",
                          src: "https://cdn.discordapp.com/attachments/436508647468564491/564131352467996693/shibainu_loading.gif"
                        }));
              } else {
                var match$1 = Caml_obj.caml_equal(self[/* state */1][/* subTags */1], /* array */[]);
                var tmp$1;
                if (match$1) {
                  tmp$1 = React.createElement("div", {
                        className: "w-full text-center py-4"
                      }, React.createElement("i", {
                            className: "fas fa-spinner fa-pulse"
                          }), React.createElement("p", undefined, Utils.str("Loading data..")));
                } else {
                  var match$2 = Caml_array.caml_array_get(Caml_array.caml_array_get(self[/* state */1][/* subTags */1], 0), 0) === "-1";
                  tmp$1 = match$2 ? React.createElement("div", {
                          className: "w-full text-center py-4"
                        }, Utils.str("You are not subscribed to any tags.")) : $$Array.map((function (item) {
                            Utils.incrementId(tableKey);
                            return React.createElement("button", {
                                        key: String(tableKey[0]),
                                        className: "inline-block bg-orange-lighter rounded-full px-3 py-1 text-sm font-semibold text-grey-darker mr-2 mt-2",
                                        value: Caml_array.caml_array_get(item, 0),
                                        onClick: (function (e) {
                                            Curry._1(self[/* send */3], /* ChangeLoadingStatus */0);
                                            return Curry._1(self[/* send */3], /* Fetch */Block.__(0, [
                                                          "remove_sub_tags",
                                                          /* array */[
                                                            userId,
                                                            Utils.getButtonValueFromEvent(e)
                                                          ]
                                                        ]));
                                          })
                                      }, Utils.str("#" + Caml_array.caml_array_get(item, 1)));
                          }), self[/* state */1][/* subTags */1]);
                }
                var match$3 = Caml_obj.caml_equal(self[/* state */1][/* subClubs */2], /* array */[]);
                var tmp$2;
                if (match$3) {
                  tmp$2 = React.createElement("div", {
                        className: "w-full text-center py-4"
                      }, React.createElement("i", {
                            className: "fas fa-spinner fa-pulse"
                          }), React.createElement("p", undefined, Utils.str("Loading data..")));
                } else {
                  var match$4 = Caml_array.caml_array_get(Caml_array.caml_array_get(self[/* state */1][/* subClubs */2], 0), 0) === "-1";
                  tmp$2 = match$4 ? React.createElement("div", {
                          className: "w-full text-center py-4"
                        }, Utils.str("You are not subscribed to any clubs.")) : $$Array.map((function (item) {
                            Utils.incrementId(tableKey);
                            return React.createElement("button", {
                                        key: String(tableKey[0]),
                                        className: "inline-block bg-orange-lighter rounded-full px-3 py-1 text-sm font-semibold text-grey-darker mr-2 mt-2",
                                        value: Caml_array.caml_array_get(item, 0),
                                        onClick: (function (e) {
                                            Curry._1(self[/* send */3], /* ChangeLoadingStatus */0);
                                            return Curry._1(self[/* send */3], /* Fetch */Block.__(0, [
                                                          "remove_sub_clubs",
                                                          /* array */[
                                                            userId,
                                                            Utils.getButtonValueFromEvent(e)
                                                          ]
                                                        ]));
                                          })
                                      }, Utils.str("#" + Caml_array.caml_array_get(item, 1)));
                          }), self[/* state */1][/* subClubs */2]);
                }
                var match$5 = Caml_obj.caml_equal(self[/* state */1][/* unsubTags */3], /* array */[]);
                var tmp$3;
                if (match$5) {
                  tmp$3 = React.createElement("div", {
                        className: "w-full text-center py-4"
                      }, React.createElement("i", {
                            className: "fas fa-spinner fa-pulse"
                          }), React.createElement("p", undefined, Utils.str("Loading data..")));
                } else {
                  var match$6 = Caml_array.caml_array_get(Caml_array.caml_array_get(self[/* state */1][/* unsubTags */3], 0), 0) === "-1";
                  tmp$3 = match$6 ? React.createElement("div", {
                          className: "w-full text-center py-4"
                        }, Utils.str("There are no tags for you to subscribe to.")) : $$Array.map((function (item) {
                            Utils.incrementId(tableKey);
                            return React.createElement("button", {
                                        key: String(tableKey[0]),
                                        className: "inline-block bg-grey-lighter rounded-full px-3 py-1 text-sm font-semibold text-grey-darker mr-2 mt-2",
                                        value: Caml_array.caml_array_get(item, 0),
                                        onClick: (function (e) {
                                            Curry._1(self[/* send */3], /* ChangeLoadingStatus */0);
                                            return Curry._1(self[/* send */3], /* Fetch */Block.__(0, [
                                                          "update_sub_tags",
                                                          /* array */[
                                                            userId,
                                                            Utils.getButtonValueFromEvent(e)
                                                          ]
                                                        ]));
                                          })
                                      }, Utils.str("#" + Caml_array.caml_array_get(item, 1)));
                          }), self[/* state */1][/* unsubTags */3]);
                }
                var match$7 = Caml_obj.caml_equal(self[/* state */1][/* unsubClubs */4], /* array */[]);
                var tmp$4;
                if (match$7) {
                  tmp$4 = React.createElement("div", {
                        className: "w-full text-center py-4"
                      }, React.createElement("i", {
                            className: "fas fa-spinner fa-pulse"
                          }), React.createElement("p", undefined, Utils.str("Loading data..")));
                } else {
                  var match$8 = Caml_array.caml_array_get(Caml_array.caml_array_get(self[/* state */1][/* unsubClubs */4], 0), 0) === "-1";
                  tmp$4 = match$8 ? React.createElement("div", {
                          className: "w-full text-center py-4"
                        }, Utils.str("There are no clubs for you to subscribe to.")) : $$Array.map((function (item) {
                            Utils.incrementId(tableKey);
                            return React.createElement("button", {
                                        key: String(tableKey[0]),
                                        className: "inline-block bg-grey-lighter rounded-full px-3 py-1 text-sm font-semibold text-grey-darker mr-2 mt-2",
                                        value: Caml_array.caml_array_get(item, 0),
                                        onClick: (function (e) {
                                            Curry._1(self[/* send */3], /* ChangeLoadingStatus */0);
                                            return Curry._1(self[/* send */3], /* Fetch */Block.__(0, [
                                                          "update_sub_clubs",
                                                          /* array */[
                                                            userId,
                                                            Utils.getButtonValueFromEvent(e)
                                                          ]
                                                        ]));
                                          })
                                      }, Utils.str("#" + Caml_array.caml_array_get(item, 1)));
                          }), self[/* state */1][/* unsubClubs */4]);
                }
                tmp = React.createElement("div", undefined, React.createElement("div", {
                          className: "w-full p-4 text-left"
                        }, React.createElement("h2", undefined, Utils.str("Subscribed tags")), React.createElement("div", {
                              className: "p-2"
                            }, tmp$1)), React.createElement("div", {
                          className: "w-full p-4 text-left"
                        }, React.createElement("h2", undefined, Utils.str("Subscribed clubs")), React.createElement("div", {
                              className: "p-2"
                            }, tmp$2)), React.createElement("div", {
                          className: "w-full p-4 text-left"
                        }, React.createElement("h2", undefined, Utils.str("Unsubscribed tags")), React.createElement("div", {
                              className: "p-2"
                            }, tmp$3)), React.createElement("div", {
                          className: "w-full p-4 text-left"
                        }, React.createElement("h2", undefined, Utils.str("Unsubscribed clubs")), React.createElement("div", {
                              className: "p-2"
                            }, tmp$4)));
              }
              return React.createElement("div", {
                          className: "container mx-auto h-full w-full py-10 flex flex-wrap items-stretch"
                        }, React.createElement("div", {
                              className: "w-full py-4"
                            }, React.createElement("div", {
                                  className: "p-4"
                                }, React.createElement("h1", {
                                      className: "py-4 font-mono text-orange-dark"
                                    }, Utils.str("Profile")))), tmp);
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* data */undefined,
                      /* subTags : array */[],
                      /* subClubs : array */[],
                      /* unsubTags : array */[],
                      /* unsubClubs : array */[],
                      /* sub_loading */false
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */reducer,
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.tableKey = tableKey;
exports.component = component;
exports.reducer = reducer;
exports.make = make;
/*  Not a pure module */
